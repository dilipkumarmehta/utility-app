  List<Employee> uniqueEmployees = employees.stream()
                    .collect(Collectors.groupingBy(Employee::getEmployeeId))
                    .values().stream()
                    .map(empList -> empList.stream()
                            .filter(e -> e.getStatus().equals("release"))
                            .findFirst()  // If "release" exists, use it
                            .orElse(empList.get(0)) // Otherwise, keep the first employee
                    )
                    .collect(Collectors.toList());
For the recent invoice, we will provide the DF. For the RCA, the CP team needs to provide the fix. This issue worked fine with the first version of the PO, but after the changes in the PO, it is not behaving as expected. The numbers in the collection are changing incorrectlyâ€”for example, instead of showing 1,2,3, it shows 1,3,4 or 3,4,5. However, the invoice is working fine with 1,2,3,4,5.

We have already enabled the parameter for both invoice and PO to rename the numbers in the collection. While it works correctly for the invoice, it is not working as expected for the PO update.

No other customers have reported this issue, and our automation already covers this change. This appears to be an edge case that is failing.

Since this parameter is not working as expected in this specific scenario, please schedule a discussion with the invoicing team before reassigning it back to us.
