package com.tmobile.bill.recon.scheduler;

import java.io.File;
import java.io.FileNotFoundException;

import org.apache.commons.io.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import net.lingala.zip4j.core.ZipFile;
import net.lingala.zip4j.exception.ZipException;

@Component
public class BillReconUnzipUtil {

	private static Logger logger = LoggerFactory.getLogger(BillReconUnzipUtil.class);
	@Value("${cron.pattern}")
	public String pattern;

	private static String reconciled = "C:\\WorkingFolder\\reconciled";
	String sourceFile = "C:\\FTP-Location";
	String destFileLocation = "C:\\WorkingFolder";

	public String getWorkingLocation() {
		String[] fileName = getSourceDirectory().split("_");
		String FileNameDest = fileName[2].substring(0, 8);
		String reportDestLocation = FileNameDest.substring(4) + "-" + FileNameDest.substring(0, 2) + "-"
				+ FileNameDest.substring(2, 4);
		logger.info("Folder created to extract the zip file ", reportDestLocation);
		return reportDestLocation;
	}

	public String getSourceDirectory() {
		File file = new File(sourceFile);
		File files[] = file.listFiles();
		if (files.length != 0) {
			logger.info("Zip file location absolutePath" + files[0].getAbsolutePath());
			return files[0].getAbsolutePath();
		}
		return null;

	}

	public String getBasedDestDirectory() {
		logger.info("Zip file base destination location " + destFileLocation);
		return destFileLocation;

	}

	public void archiveToReconciled() {
		try {
			File workingDirectory = new File(getBasedDestDirectory() + File.separator + getWorkingLocation());
			File srcDirectory = new File(getSourceDirectory());

			logger.info("Copying the zip file to destination location");
			if (srcDirectory.exists()) {
				FileUtils.copyFileToDirectory(srcDirectory, new File(reconciled));
			}
			logger.info("deleting Zip File from directory"+getSourceDirectory());
			FileUtils.cleanDirectory(new File(sourceFile));

			if (workingDirectory.exists()) {
				logger.info("Deleting working folder" + workingDirectory);
				FileUtils.deleteDirectory(workingDirectory);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void unzipFile() {
		try {
			ZipFile zipFile = new ZipFile(getSourceDirectory());
			String desLocation = getBasedDestDirectory() + File.separator + getWorkingLocation();
			logger.info("working folder location created " + desLocation);
			zipFile.extractAll(desLocation);
		} catch (ZipException e) {
			logger.error("Error accured while unziping the file");
			e.printStackTrace();
		}
	}

	public static void main(String[] args) throws FileNotFoundException {
		/*String s = new BillReconUnzipUtil().getSourceDirectory();
		if (s != null) {
			new BillReconUnzipUtil().unzipFile();
			System.out.println("start woring recon");
			new BillReconUnzipUtil().archiveToReconciled();
		}
*/
	}

}
